VIEW
<div id="root01">(1)
    <h1>Product: {{ product }} (2)</h1>
    <p>Description: {{ description }}</p>
</div>

JS

let app01 = new Vue({
  el: "#root01",(1)
  data: { (2)
    product: "Red Socks",
    description:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores, non!"
  }
});

1 создать див и соеденить его с обьектом вью 
<div id="root01"> И let app01 = let app01 = new Vue({ el: "#root01",});
2 создать в объекте вью проперти data и вывести их в вид
-----------------------------------------------------------------------------------------------

Соединяем атрибут с проперти из дата
v-bind или сокращенно :
VIEW
<a :href="url"><img :src="image"/></a>  v-bind:anyAttribute соединяем атрибут с проперти из дата

JS
data: {
    url: "https://excisionmerch.com/products/bass-canyon-midnight-socks",
    image: "images/socks.jpg"
}

-----------------------------------------------------------------------------------------------
Показываем и скрываем элеемент при прределенном условии
v-if, i-else-if, i-else, v-show
VIEW
<span v-if="stock >10" class="tag is-primary">in stock</span> 
<span v-else-if="stock <= 10 && stock >0" class="tag is-warning">Almost out of stock</span> 
<span v-else class="tag is-danger">Out of stock</span> 

JS
data: {
    stock: 10
  }
-----------------------------------------------------------------------------------------------
Components
VIEW
<product :premium="premium" @add-to-cart="updateCart" @remove-from-cart="removeItem"></product>
Чтобы передать переменные от родителя к компоненту используется props
Vue.component("product", {
  props: {
    premium: { название переменной
      type: Boolean, тип
      required: true 
    }
  },

  @add-to-cart="updateCart" прописываем событие которое является методом внутри компонента, этод метод передает родительскому методу updateCart 
  параметры 
  метод компонента addToCart: function() {
      this.$emit("add-to-cart", this.variants[this.selectedVariant].variantId);
    }
метод родителя updateCart: function(id) {
      this.cart.push(id);
    }
-----------------------------------------------------------------------------------------------
Можно создавать двустороннюю связь между темплатеом и датай:v-model="" 
 <input type="radio" name="answer" value="yes" v-model="recomended">

 
 

 <form @submit.prevent="onSubmit"> создали евент @submit.prevent , prevent = preventDefault
 евент ссылается на метод в компоненте onSubmit который производит this.$emit("review-submited", productReview);
 productReview это обьект
 в компоненте <product> мы поместили компонент <product-review @review-submited="addReview"></product-review>
 с евентом @review-submited="addReview", 
 метод addReview получает от onSubmit обьект productReview и помещает его в массив
